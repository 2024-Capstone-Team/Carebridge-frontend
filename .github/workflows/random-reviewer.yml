name: Random Reviewer Assignment

on:
  pull_request:
    types: [opened]

jobs:
  assign-reviewer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq (if necessary)
        run: sudo apt-get install jq

      - name: Get team members
        id: get_team_members
        run: |
          TEAM_NAME="frontend" 
          ORG_NAME="2024-Capstone-Team"  # Your organization name
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          MEMBERS=$(curl -s \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/orgs/${ORG_NAME}/teams/${TEAM_NAME}/members)
          
          # Debugging: Print the raw response to verify the structure
          echo "$MEMBERS"
          
          # Exclude the PR creator
          PR_CREATOR=${{ github.actor }}
          
          # Check if MEMBERS is empty or contains errors
          if [[ "$MEMBERS" == *"Not Found"* ]]; then
            echo "Error: Team or members not found"
            exit 1
          fi

          # Extract member names and exclude PR creator
          MEMBER_NAMES=$(echo "$MEMBERS" | jq -r '.[].login' | grep -v "^${PR_CREATOR}$")

          # Randomly pick a reviewer from the remaining team members
          RANDOM_REVIEWER=$(echo "$MEMBER_NAMES" | shuf -n 1)
          
          echo "Randomly assigned reviewer: $RANDOM_REVIEWER"
          echo "REVIEWER=$RANDOM_REVIEWER" >> $GITHUB_ENV

      - name: Assign random reviewer to PR
        run: |
          # Assign the random reviewer to the PR
          PR_NUMBER=${{ github.event.pull_request.number }}
          REVIEWER=${{ env.REVIEWER }}
          
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"reviewers":["'"$REVIEWER"'"]}' \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/requested_reviewers"
